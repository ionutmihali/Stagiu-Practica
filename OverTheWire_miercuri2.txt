*Natas
Level 0
-click dreapta + View Page Source
<!--The password for natas1 is gtVrDuiDfck831PqWsLEZy5gyDz1clto -->

Level 1
-deoarece opriunea de click dreapta este blocata, vom apasa tasta F12, din meniurile deschise, in partea stanga (consola), in sectiunea <div id="content"> se va regasi parola
ZluruAthQk7Q2MqmDeTiUij2ZvWy2mBi

Level 2
-click dreapta + View Page Source
-observam existenta unei surse files/pixel.png
-vom accesa files prin intermediul URL-ului initial, adaugand files/ la final
-din "Index of /files deschidem fisierul users.txt:
# username:password
alice:BYNdCesZqW
bob:jw2ueICLvT
charlie:G5vCxkVV3m
natas3:sJIJNW6ucpu6HPZ1ZAchaDtwd7oGrD14
eve:zo4mJWyNj2
mallory:9urtcpzBmH
sJIJNW6ucpu6HPZ1ZAchaDtwd7oGrD14

Level 3
-click dreapta + View Page Source
<!-- No more information leaks!! Not even Google will find it this time... -->

-intelegem ca s-a folosit un web robot = program care traverseaza Web-ul in mod automat
-accesam robotul asociat URL-ului nostru
http://natas3.natas.labs.overthewire.org/robots.txt
User-agent: *
Disallow: /s3cr3t/
-observam ca in campul disallow, care spune robotului ce site-uri nu are voie sa viziteze, este "/s3cr3t/"
-vom deschide URL-ul aferent
http://natas3.natas.labs.overthewire.org/s3cr3t/
-deschidem fisierul users.txt
natas4:Z9tkRkWmpt9Qr7XrR5jWRkgOU901swEZ


*Leviathan
Level 1
	ls -a
.  ..  .backup  .bash_logout  .bashrc  .profile
	cd .backup
	ls -a
.  ..  bookmarks.html
- un cat simplu asupra fisierului bookmarks.html ne ofera foarte multe informatii si ar fi dificil sa aflam daca se regasesc si informatiile care ne intereseaza, astfel, vom cauta in functie de cuvantul cheie "leviathan1"
	cat bookmarks.html | egrep leviathan1
<DT><A HREF="http://leviathan.labs.overthewire.org/passwordus.html | This will be fixed later, the password for leviathan1 is rioGegei8m" ADD_DATE="1155384634" LAST_CHARSET="ISO-8859-1" ID="rdf:#$2wIU71">password to leviathan1</A>
-> rioGegei8m	

Level 2
	ls
check
	./check
password: 1234
Wrong password, Good Bye ...
-observam ca scriptul compara parola introdusa cu o alta parola
-pentru a avea acces la cod, vom folosi comanda ltrace-care este executa comenzile pas cu pas, cat timp acestea exista:
	ltrace ./check
__libc_start_main(0x804853b, 1, 0xffffd784, 0x8048610 <unfinished ...>
printf("password: ")                             = 10
getchar(1, 0, 0x65766f6c, 0x646f6700password: 1234
)            = 49
getchar(1, 0, 0x65766f6c, 0x646f6700)            = 50
getchar(1, 0, 0x65766f6c, 0x646f6700)            = 51
strcmp("123", "sex")                             = -1
puts("Wrong password, Good Bye ..."Wrong password, Good Bye ...
)             = 29
+++ exited (status 0) +++
-observam ca parola corecta este cuvantul "sex"
-introducem parola corecta si ni se va deschide in terminal un non-root user
	./check
password: sex
$ 
-verificam cu ce utilizator suntem conectat
	$ whoami
leviathan2
-pentru ca suntem conectat cu utilizatorul leviathan2, vom accesa direct fisierul /etc/leviathan_pass/leviathan2, unde ar trebui sa se regaseasca parola
	$ cat /etc/leviathan_pass/leviathan2
ougahZi8Ta

Level 3
	ls
printfile
	./printfile
*** File Printer ***
Usage: ./printfile filename
-adaugam un fisier ca argument, fisierul in care ar trebui sa se afle parola
	./printfile /etc/leviathan_pass/leviathan3
You cant have that file...
-vom incerca sa aflam cum functineaza scriptul printfile prin intermediul unui alt fisier
	ltrace ~/printfile test.txt
__libc_start_main(0x804852b, 2, 0xffffd754, 0x8048610 <unfinished ...>
access("test.txt", 4)                            = 0
snprintf("/bin/cat test.txt", 511, "/bin/cat %s", "test.txt") = 17
geteuid()                                        = 12002
geteuid()                                        = 12002
setreuid(12002, 12002)                           = 0
system("/bin/cat test.txt" <no return ...>
--- SIGCHLD (Child exited) ---
<... system resumed> )                           = 0
+++ exited (status 0) +++
-access() -verifica permisiunile user-ului real(cel care detine procesul), nu ale celui efectiv(cel pe care ilcauta SO pentru a lua decizii), deci printfile ar putea fi executat cu privilegile lui leviathan3, detinatorul fisierului
-/bin/cat -se mai poate presupune ca /bin/cat foloseste doar o parte din cale, nu toata calea; daca am avea un fisier cu numele compus din 2 cuvinte, separate prin spatiu, am putea sa profitam de aceasta eroare de securitate
	touch pass\ file.txt
	ltrace ~/printfile 'pass file.txt'
__libc_start_main(0x804852b, 2, 0xffffd744, 0x8048610 <unfinished ...>
access("pass file.txt", 4)                       = 0
snprintf("/bin/cat pass file.txt", 511, "/bin/cat %s", "pass file.txt") = 22
geteuid()                                        = 12002
geteuid()                                        = 12002
setreuid(12002, 12002)                           = 0
system("/bin/cat pass file.txt"/bin/cat: pass: No such file or directory
/bin/cat: file.txt: No such file or directory
 <no return ...>
--- SIGCHLD (Child exited) ---
<... system resumed> )                           = 256
+++ exited (status 0) +++
-dupa cum se poate observa, presupunerea a fost corecta, iar /bin/cat trateaza fisierul nostru ca 2 fisiere distincte
-vom crea simbolic fisierul pass, in legatura directa cu /etc/leviathan_pass/leviathan3
	ln -s /etc/leviathan_pass/leviathan3 pass
	ls -la
total 268
drwxr-sr-x   2 leviathan2 root   4096 Jun 22 09:43 .
drwxrws-wt 255 root       root 266240 Jun 22 09:41 ..
lrwxrwxrwx   1 leviathan2 root     30 Jun 22 09:43 pass -> /etc/leviathan_pass/leviathan3
-rw-r--r--   1 leviathan2 root      0 Jun 22 09:40 pass file.txt
	~/printfile "pass file.txt"
Ahdiemoo1j
/bin/cat: file.txt: No such file or directory

Level 3
	ls
level3
	./level3
Enter the password> 1234
bzzzzzzzzap. WRONG
	ltrace ./level3
__libc_start_main(0x8048618, 1, 0xffffd784, 0x80486d0 <unfinished ...>
strcmp("h0no33", "kakaka")                       = -1
printf("Enter the password> ")                   = 20
fgets(Enter the password> 1234
"1234\n", 256, 0xf7fc55a0)                 = 0xffffd590
strcmp("1234\n", "snlprintf\n")                  = -1
puts("bzzzzzzzzap. WRONG"bzzzzzzzzap. WRONG
)                       = 19
+++ exited (status 0) +++
-observam ca parola este: snlprintf
	./level3
Enter the password> snlprintf
[You've got shell]!
	$ whoami
leviathan4
	$ cat /etc/leviathan_pass/leviathan4
vuH0coox6m

Level 4
	ls
	ls -a
.  ..  .bash_logout  .bashrc  .profile  .trash
	cd .trash/
	ls
bin
	./bin
01010100 01101001 01110100 01101000 00110100 01100011 01101111 01101011 01100101 01101001 00001010 
-avem un putput in binar
-il vom converti in ASCII pentru a obtine parola
Tith4cokei

Level 5
	ls
leviathan5
	./leviathan5 
Cannot find /tmp/file.log
	ltrace ./leviathan5 
__libc_start_main(0x80485db, 1, 0xffffd784, 0x80486a0 <unfinished ...>
fopen("/tmp/file.log", "r")                      = 0
puts("Cannot find /tmp/file.log"Cannot find /tmp/file.log
)                = 26
exit(-1 <no return ...>
+++ exited (status 255) +++
-pentru ca fisierul /temp/file.log nu exista, dar este folosit in script, vom crea un symlink al lui /etc/leviathan_pass/leviathan6 in interiorul sau, pentru a putea accesa parola
	ln -s /etc/leviathan_pass/leviathan6 /tmp/file.log
	./leviathan5 
UgaoFee4li

Level 6
	ls
leviathan6
	./leviathan6 
usage: ./leviathan6 <4 digit code>
	ltrace ./leviathan6 
__libc_start_main(0x804853b, 1, 0xffffd784, 0x80485e0 <unfinished ...>
printf("usage: %s <4 digit code>\n", "./leviathan6"usage: ./leviathan6 <4 digit code>
) = 35
exit(-1 <no return ...>
+++ exited (status 255) +++
	./leviathan6 0000
Wrong
-observam ca pentru a putea obtine parola, este nevoie de un pin foartmat din 4 cifre, pe care nu il cunoastem
-vom scrie in directorul /tmp/j6 un script a.sh, cu continutul:
#!/bin/bash

for a in {0000..9999}
do
~/leviathan6 $a
done
	chmod u+x a.sh
	./a.sh
-dupa rulare, vom trece din nou intru-un not-root user
	whoami
leviathan7
	cat /etc/leviathan_pass/leviathan7
ahy7MaeBo9

*Krypton
Level 1
-decodificarea parolei: echo "S1JZUFRPTklTR1JFQVQ=" | base64 -d ->KRYPTONISGREAT
	ls
	cd /krypton
	ls
krypton1  krypton2  krypton3  krypton4  krypton5  krypton6
	cd krypton1
	ls
krypton2  README
-parola se afla in krypton2 si este codificata cu ajutorul codificarii ROT13
	cat krypton2 
YRIRY GJB CNFFJBEQ EBGGRA
	cat krypton2 | tr [n-za-mN-ZA-M] [a-zA-Z]
LEVEL TWO PASSWORD ROTTEN

Level 2
	cd /krypton/
	ls
krypton1  krypton2  krypton3  krypton4  krypton5  krypton6
	cd krypton2
	ls
encrypt  keyfile.dat  krypton3  README

	cat krypton3 | tr [m-za-lM-ZA-L] [a-zA-Z]
CAESARISEASY
	cat krypton3 
OMQEMDUEQMEK
	cat krypton3 | tr [m-za-lM-ZA-L] [a-zA-Z]
CAESARISEASY

Level 3
	cd /krypton/
	ls
krypton1  krypton2  krypton3  krypton4  krypton5  krypton6
	cd krypton3
	ls
found1  found2  found3  HINT1  HINT2  krypton4  README
	cat krypton4 
KSVVW BGSJD SVSIS VXBMN YQUUK BNWCU ANMJS
-pentru decodificarea mesajului am adaugat in decodificatorul quipquip mesajele din fisierele found1, found2 si found3, fiind criptate cu acelasi codificator
-dupa decodificare, singurul fisier care a fost decodificat in text citet in limba engleza a fost found1
-astfel am decis sa adaug parola la finalul fisierului found1, dupa decodificare am obtinut:
WELL DONE THE LEVEL FOUR PASSWORD IS BRUTE

Level 4
	cd /krypton/
	ls
krypton1  krypton2  krypton3  krypton4  krypton5  krypton6
	cd krypton4
	ls
found1  found2  HINT  krypton5  README
	cat krypton5 
HCIKV RJOX
-in engleza cele mai aparute caractere intr-o propozitie sunt THE ->key=FRE
-HCIKVRJOX - FREFREFRE ->CLEARTEXT

Level 5
	cd /krypton/
	ls
krypton1  krypton2  krypton3  krypton4  krypton5  krypton6
	cd krypton5
	ls
found1  found2  found3  krypton6  README
	cat README 
Frequency analysis can break a known key length as well.  Lets try one
last polyalphabetic cipher, but this time the key length is unknown.
Enjoy.
	cat krypton6 
BELOS Z
-vom folosi pentru decriptare vigenere.php
-introducem in ciphertext textul din fisierul found1
-key length va fi 9 si obtinem cheia: xeylencth, care rearanjata ar putea fi keylength
- o folosim pe cea din urma pentru decodificarea parolei si obtinem:
RANDOM
